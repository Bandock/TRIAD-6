cmake_minimum_required(VERSION 3.10)
project(TRIAD-6 VERSION 0.1 LANGUAGES CXX)

find_package(SDL2 REQUIRED)
find_package(fmt REQUIRED)

set(CURRENT_RENDERER "OpenGL 2.1" CACHE STRING "Renderer to build with.")
set_property(CACHE CURRENT_RENDERER PROPERTY STRINGS "OpenGL 2.1;OpenGL ES 2.0;OpenGL ES 3.0")

if (CURRENT_RENDERER STREQUAL "OpenGL 2.1")
	find_package(OpenGL REQUIRED)
	find_package(GLEW REQUIRED)
	set(CURRENT_RENDERER_SOURCE_DIR "opengl21")
	set(CURRENT_RENDERER_INCLUDE_DIR "opengl21")
	set(CURRENT_RENDERER_LIBRARIES OpenGL::GL GLEW::glew)
elseif (CURRENT_RENDERER STREQUAL "OpenGL ES 2.0")
	find_package(OpenGL REQUIRED)
	set(CURRENT_RENDERER_SOURCE_DIR "opengles2")
	set(CURRENT_RENDERER_INCLUDE_DIR "opengles2")
	set(CURRENT_RENDERER_LIBRARIES OpenGL::GL)
elseif (CURRENT_RENDERER STREQUAL "OpenGL ES 3.0")
	find_package(OpenGL REQUIRED)
	set(CURRENT_RENDERER_SOURCE_DIR "opengles3")
	set(CURRENT_RENDERER_INCLUDE_DIR "opengles3")
	set(CURRENT_RENDERER_LIBRARIES OpenGL::GL)
endif ()

add_executable(TRIAD-6 src/${CURRENT_RENDERER_SOURCE_DIR}/renderer.cpp src/bvs1.cpp src/machine.cpp src/main.cpp)
target_include_directories(TRIAD-6 PUBLIC "${PROJECT_SOURCE_DIR}/include" "${SDL2_INCLUDE_DIRS}" "${PROJECT_SOURCE_DIR}/include/${CURRENT_RENDERER_INCLUDE_DIR}")
target_compile_features(TRIAD-6 PRIVATE cxx_std_20)
target_link_libraries(TRIAD-6 SDL2 ${CURRENT_RENDERER_LIBRARIES} fmt::fmt)
